* 2016-March-28-Monday:
** From 9:30 AM TO 05:30 PM :
- Today I took setup DHCP server, Setup DHCP server and Installed DHCP server on CentOS. I have read about DHCP server and taken various articles from online is available at [[http://www.krizna.com/centos/install-configure-dhcp-server-centos-6/][here]]
* DHCP(Dynamic Host Configuration Protocol):
 - Dynamic Host Configuration Protocol (DHCP) is a network protocol that automatically assigns TCP/IP information to client machines.
   Each DHCP client connects to the centrally located DHCP server, which returns the network configuration (including the IP address, gateway, and DNS servers)
   of that client. 
** Why we use DHCP ?
 - DHCP is useful for automatic configuration of client network interfaces. When configuring the client system, you can choose DHCP instead of specifying an 
   IP address, netmask, gateway, or DNS servers. The client retrieves this information from the DHCP server. DHCP is also useful if you want to change the
   IP addresses of a large number of systems. Instead of reconfiguring all the systems, you can just edit one configuration file on the server for the new set of IP addresses.
   If the DNS servers for an organization changes, the changes happen on the DHCP server, not on the DHCP clients. When you restart the network or reboot the clients,
   the changes go into effect.
 - If an organization has a functional DHCP server correctly connected to a network, laptops and other mobile computer users can move these devices from office to office. 
** Advantages of DHCP-Server:
 - There is no need to manually configure each client with an IP address.
 - You don't need to keep a record of the IP addresses that you have assigned.
 - You can automatically assign a new IP address if you move a client to a different subnet.
* Setup DHCP server on Centos:
- Dynamic Host Configuration Protocol (DHCP) is used to assign IP addresses and other stuff like gateway and DNS details automatically to the clients.
  we need a DHCP server configured for offering ipaddress to the clients when it is required.
* Installing DHCP server on Centos:
- Update yum repositories and packages by typing the below command
#+begin_example
[root@localhost ~]# yum update
#+end_example
- *Step 1* » Install dhcp server and client using the below command
#+begin_example
[root@localhost ~]# yum install dhcp
#+end_example
- *Step 2* » After installing dhcp server packages along with dependencies .Assign a static ip (eg: “192.168.1.11”) in the same DHCP range for
  the listening interface ( eg : “eth0” ). Open =/etc/sysconfig/network-scripts/ifcfg-eth0= file and make the changes as per your requirement .
#+begin_example
HWADDR="00:0C:29:F1:01:4B"
NM_CONTROLLED="yes"
ONBOOT="yes"
BOOTPROTO="none"
IPADDR=192.168.1.11
NETMASK=255.255.255.0
GATEWAY=192.168.1.1
#+end_example
- *Step 3* » Now open =/etc/sysconfig/dhcpd= file and add the preferred interface name to DHCPDARGS variable as below
#+begin_example
# Command line options here
DHCPDARGS=eth0
#+end_example
- *Step 4* » open =/etc/dhcp/dhcpd.conf= file and paste the below lines and save it.
#+begin_example
#specify domain name
option domain-name "krizna.com";
#specify DNS server ip and additional DNS server ip
option domain-name-servers 192.168.1.10, 208.67.222.222;
#specify default lease time
default-lease-time 600;
#specify Max lease time
max-lease-time 7200;
#specify log method
log-facility local7;
#Configuring subnet and iprange
subnet 192.168.1.0 netmask 255.255.255.0 {
range 192.168.1.50 192.168.1.254;
option broadcast-address 192.168.1.255;
#Default gateway ip
option routers 192.168.1.1;
}
#Fixed ip address based on MAC id
host Printer01 {
hardware ethernet 02:34:37:24:c0:a5;
fixed-address 192.168.1.55;
}
#+end_example
- *Step 5* » Now start the service
#+begin_example
[root@localhost ~]# service dhcpd start
#+end_example
- and type this below command to start dhcp service automatically while booting.
#+begin_example
[root@localhost ~]# chkconfig --levels 235 dhcpd on
#+end_example
- That’s it .Clients can get IP from DHCP server and Please ensure you don’t have any other dhcp servers in the same network ( Routers might have DHCP enabled ).

* 2016-March-29-Tuesday:
** From 9:30 AM TO 01:30 PM :
- I gone through practised DHCP server, Installed and setup DHCP sever on Containers in OpenVZ.
* Setup DHCP server on Centos:
- Dynamic Host Configuration Protocol (DHCP) is used to assign IP addresses and other stuff like gateway and DNS details automatically to the clients.
  we need a DHCP server configured for offering ipaddress to the clients when it is required.
* Installing DHCP server on Centos:
- Update yum repositories and packages by typing the below command
#+begin_example
[root@localhost ~]# yum update
#+end_example
- *Step 1* » Install dhcp server and client using the below command
#+begin_example
[root@localhost ~]# yum install dhcp
#+end_example
- *Step 2* » After installing dhcp server packages along with dependencies .Assign a static ip (eg: “10.2.59.101”) in the same DHCP range for
  the listening interface ( eg : “eth1” ). Open =/etc/sysconfig/network-scripts/ifcfg-eth1= file and make the changes as per your requirement .
#+begin_example
HWADDR="00:0C:29:F1:01:4B"
NM_CONTROLLED="yes"
ONBOOT="yes"
BOOTPROTO="dhcp"
IPADDR=10.2.59.101
NETMASK=255.255.255.0
GATEWAY=10.2.59.1
#+end_example
- *Step 3* » Now open =/etc/sysconfig/dhcpd= file and add the preferred interface name to DHCPDARGS variable as below
#+begin_example
# Command line options here
DHCPDARGS=eth1
#+end_example
- *Step 4* » open =/etc/dhcp/dhcpd.conf= file and paste the below lines and save it.
#+begin_example

option domain-name "kraghupathi.com";

#specify DNS server ip and additional DNS server ip
option domain-name-servers 10.2.59.100;

# default lease time

default-lease-time 600;
# max lease time

max-lease-time 7200;
# this DHCP server to be declared valid

authoritative;
# specify network address and subnet mask

subnet 10.2.59.100 netmask 255.255.255.0 {
    # specify the range of lease IP address

    range dynamic-bootp 10.0.0.200 10.0.0.254;
    # specify broadcast address

    option broadcast-address 10.2.59.255;
    # specify default gateway

    option routers 10.2.59.1;
}
#+end_example
- *Step 5* » Now start the service
#+begin_example
[root@localhost ~]# service dhcpd start
#+end_example
- and type this below command to start dhcp service automatically while booting.
#+begin_example
[root@localhost ~]# chkconfig dhcpd on
#+end_example

** From 9:30 AM TO 01:30 PM :
- I took DNS-Server, BIND(DNS)-Server and Installed BIND(DNS)-Sever on CentOS. I read about BIND server and completed various tutorials from online.

* DNS-Server 
- Domain Name System (or Service or Server), an Internet service that translates domain names into IP addresses. Because domain names are alphabetic,
  they're easier to remember. The Internet however, is really based on IP addresses. Every time you use a domain name, therefore,
  a DNS service must translate the name into the corresponding IP address.
   * EX:= To find the IP address of www.example.com. We use command as below
#+begin_example
nslookup www.example.com
#+end_example
The above command will give the ip address associated with =www.example.com= using DNS server.
* BIND(DNS)-Sever:
- BIND stands for Berkley Internet Naming Daemon. Which is the most common program used for maintaining a name server on Linux.
** Advantages of DNS-Server:
- DNS can be configured to allow dynamic secure updates, enhancing the security of your DNS infrastructure.
- No need to memorise numbers.
- Domain names makes / gives a kind of sense to hyper links when a name is given instead of a string of numbers .
- Easy for categorising,archiving and inturn helping ( to an extent ) search engines.
* Installing BIND(DNS) Server:
- Update yum repositories and packages by typing the below command
#+begin_example
[root@localhost ~]# yum update
#+end_example
- Install BIND(DNS) Server using the below command
#+begin_example
[root@masterdns ~]# yum install bind* -y
#+end_example

* 2016-March-30-wednesday:
** From 9:30 AM TO 06:00 PM :
- Today I have practised bridge network, connected couple of containers interfaces and bridge, Setting Up Bridge for Private Network.
  And I have completed various articles from online which is available at [[https://github.com/vlead/ovpl/blob/master/docs/bridge-setup.org][here]]
* Setting Up Bridge for Private Network
** Creating a bridge: 
- Bridge is basically a file configured with essential settings which mentions the bridge name, boot protocol, on boot settings, type and if it is to be network manager controlled. Move to the network-scripts directory in /etc/sysconfig by following command:
#+begin_example
cd /etc/sysconfig/network-scripts/
#+end_example
- We next step set up a bridge in our private network. Let us call it as br1. To create the bridge, create a file with name ifcfg-br1 in the current directory including the following settings:
#+begin_example
DEVICE=br1
TYPE=Bridge
ONBOOT=yes
NM_CONTROLLED=no
BOOTPROTO=none
#+end_example
 * Restart network service to effect the changes.
#+begin_example
service network restrat
#+end_example
 * Following command can be issued to list all the bridges created and the interfaces they are connected to.
#+begin_example
brctl show
#+end_example
- The output has to contain the created bridge and any other bridges previously created with connected interfaces.
  With current configuration used, a sample output can be seen below:
#+begin_example
bridge name	bridge id		STP enabled	interfaces
br1		8000.000000000000	no	         
#+end_example
** Creating private subnet:
- To test the settings we can create our own private subnet with three test containers.
#+begin_example
vzctl create 101 --ostemplate centos-6-x86_64 --hostname centos-1
vzctl create 102 --ostemplate centos-6-x86_64 --hostname centos-2
vzctl create 103 --ostemplate centos-6-x86_64 --hostname centos-3
#+end_example
- Note that ip address is not set for creating the containers.
- set the netfilter to full for the containers.
#+begin_example
vzctl set 101 --netfilter full --save
vzctl set 102 --netfilter full --save
vzctl set 103 --netfilter full --save
#+end_example
- The containers needs to be connected to the bridge br0.This is achieved by connecting with the respective interfaces. This is done by the following commands:
#+begin_example
vzctl set 101 --netif_add eth0,,,,br1 --save
vzctl set 102 --netif_add eth1,,,,br1 --save
vzctl set 103 --netif_add eth2,,,,br1 --save
#+end_example
- Start the containers and set its status to running.
#+begin_example
vzctl start 101
vzctl start 102
vzctl start 103
#+end_example
* Configuring Containers:
- Enter the contianers
#+begin_example
vzctl enter 101
vzctl enter 102
vzctl enter 103
#+end_example
- eth0,eth1 and eth2 interfaces of the containers needs to be configured to connect to the bridge. The configuration can set in the directory network-scripts for the files ifcfg-eth0, ifcfg-eth1 and ifcfg-eth2.
#+begin_example
cd /etc/sysconfig/network-scripts
#+end_example
 * ifcfg-eth0 file should contain the following settings:
#+begin_example
DEVICE=eth0
HWADDR=00:18:51:9A:D8:E5
BOOTPROTO=static
ONBOOT=yes
NM_CONTROLLED=no
IPADDR=10.2.59.101
NETMASK=255.255.255.0
#+end_example
 * ifcfg-eth1 file should contain the following settings:
#+begin_example
DEVICE=eth1
HWADDR=00:18:51:97:0D:0C
BOOTPROTO=static
ONBOOT=yes
NM_CONTROLLED=no
IPADDR=10.2.59.102
NETMASK=255.255.255.0
#+end_example
 * ifcfg-eth2 file should contain the following settings:
#+begin_example
DEVICE=eth2
HWADDR=00:18:51:86:A8:F3
BOOTPROTO=static
ONBOOT=yes
NM_CONTROLLED=no
IPADDR=10.2.59.103
NETMASK=255.255.255.0
#+end_example
- Restart the network service and check if the eth0, eth1 and eth2 are assigned to ip-address or not (ifconfig command).
- The hardware address can be known by the command ifconfig -a.
- *Note*: Hardware address will be only available after adding the configuration files. The process is to first add the configuration without the hardware address,
  restart the service and later update it.
