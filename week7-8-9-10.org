* Week 7
* 2016-Apr-04-Monday:
- I have revised all baisic concepts of Networking, Virtualization techniques which includes SSH, Apache, DNS, DHCP, OpenVZ, KVM, which is available [[https://github.com/kraghupathi/work-reports/blob/master/week5-report.org][here]]
* 2016-Apr-05-Tuesday:
- Created small network using bridge setup by connecting openvz containers as nodes.
* 2016-Apr-06-Wednesday:
- I have learned about python's datastructures like =lists=, =tuples= and also =string= concepts.
- After I finished leaning above data sturcture concepts. I have solved all the problem related to concepts.
- Here I have listed all the exercises that I have done so far.
** Exercise1.
- Iterations using for and while loops.
** Exercise2.
- Strings, string sequences, string with loop, string comparison and all string methods.
** Exercise3.
- what is lists?, list of sequense, list operations, list methods, list arguments and list with functions.
** Exercise4.
- what is tuples?, comparing tuples and sequenses of strings,lists and tuples.
* 2016-Apr-07-Thursday:
- I have practised Python Programs and wrote a python scripts that will looping concepts, strings, listst and tuples.
** Exersice5.
- I have implemented source code for Looping concepts, string, lists and tuples.
* Script-1
- This script is about to print list of values using for and while loop, break and continue statements.
- Executed the script using command
#+begin_example
chmod +x loop.py
./install.py
#+end_example
- Script has the following code
#+begin_example
#!/usr/bin/python
# Sample for loop to print welcome message 3 times
for i in '123':
        print "Welcome",i,"times"

# Iterating python for loop using range() function
# Python for loop using range()
 
print "*** Generates a list of 3 values starting from 0 ***"
for i in range(3):
        print "Welcome",i,"times."
 
print "*** Generates a list of 3 values starting from 1 ***"
for i in range(1,4):
        print "Welcome",i,"times."

# Prints out 0,1,2,3,4 using while loop
count = 0
while count < 5:
    print count
    count = count + 1 

# Prints out 0,1,2,3,4 using break statement.
count = 0
while True:
    print count
    count = count + 1
    if count >= 5:
        break

# Prints out only odd numbers - 1,3,5,7,9 using continue statement.
for x in xrange(10):
    # Check if x is even
    if x % 2 == 0:
        continue
    print x
#+end_example

* Script-2
- This script is about to create string values, string comparision and string methods.
- Executed the script using command
#+begin_example
chmod +x string.py
./install.py
#+end_example
- Script has the following code
#+begin_example
#!/usr/bin/python
# Assign three string charecters to a, b and c variables. And we print them to console.
a = "raghu"
b = "pathi"
c = "kammari"
print a
print b
print c

# Finding the length of a string 
# The len() method calculates the number of characters in a string.
a = "1234"
b = "raghu"
c = "welcome"
print len(a)
print len(b)
print len(c)

# Finding Comparingg two strings
print "aa" == "aa"
print "ab" == "aa"
print "12" == "12"
print "120" == "1123"

# Print three columns of numbers.

for x in range(1,11):
    print '%d %d %d' % (x, x*x, x*x*x)
#+end_example

* Script-3
- This script is about to create list elements, list with functions and tuples.
- Executed the script using command
#+begin_example
chmod +x list.py
./install.py
#+end_example
- Script has the following code
#+begin_example
#!/usr/bin/python
# Print list 6 elements and accessed by their index.
no = [1,"raghu","welcome",4,5,6]
print no

# Print list 5 elements and assigned by their index. And we print comparing two variables.

x = [1, 2, 3, 4, 5]
y = [3, 4, 5, 6, 7]

print x == x
print x + y

print x * 3

print 2 in x
print 2 in x

# Finding length, max, mina and sum of given values using sequence functions

n = [1, 2, 3, 4, 5, 6, 7, 8]

print "There are %d items" % len(n)
print "Maximum is %d" % max(n)
print "Minimum is %d" % min(n)
print "The sum of values is %d" % sum(n)

# Print two variables to access values in tuples.
tup1 = ('welcome', 'python', 20, 300);
tup2 = (1, 2, 3, 4, 5, 6, 7 );

# Creating a new tuple as following
tup3 = tup1 + tup2;

print "tup1[0]: ", tup1[0]
print "tup2[1:5]: ", tup2[1:5]
print "tup3:", tup3
#+end_example

* Week 8
* 2016-Apr-11-Monday:
- I have gone through the =Linux Lab= which is available at *Vlabs.ac.in* [[http://cse09-iiith.virtual-labs.ac.in/][here]]. And done all the following experiments.
  * File Management
  * Text Editor
  * File Content
  * File Permissions
  * Archival and Compression
  * Obtaining System Information
  * Pipes and Redirection
  * Searching
  * Basic Networking 

* 2016-Apr-12-Tuesday:
- I have Practised and revised KVM Virtualization Technique by Creating and deleting Snapshots, in that I installed windows OS, Ubuntu OS and Created snapshots too.

* 2016-Apr-13-Wednesday:
- I have gone through the AWS(Amazon Web Services) EC2 Cloud technique and read about various articles from online which can be found [[https://aws.amazon.com/what-is-cloud-computing/?nc2=h_l2_cc][here]].
  And got the clear picture on following concepts.
 * What is AWS?
 * What is Cloud Computing?, How does it works?, Types of Cloud Computing and Advantages of Cloud Computing.
- Created my own AWS account to practice EC2.
- Created multiple AWS EC2 VMs which are =free-tier=.
* 2016-Apr-14-Thursday:
- Today Ashay assigned me a task. The task is to install Dual Operating System (Windows7 & Ubuntu 14.04 LTS 64 bit) and install all the required packages as per *RAVI*'s requirement.
- I choose Windows7 64 bit as first OS and Ubuntu14.04 64 bit as second OS.
- I have installed OS through USB, by making USB as bootable pendrive using =unetbootin= tool.
- After successful installation of both the OS’s. I restarted my machine to check whether grub entries are there or not.
- I couldn’t see the grub entries for Windows OS. (I don't know the reason why???) 
  Then I logged into the Ubuntu machine and updated the grub using the command “grub-update”.
- Then I could see both OS’s grub entries.

* 2016-Apr-15-Friday:
- I resumed my work on setting up *RAVI's* machine and I installed all the required packages on Ubuntu14.04 OS, I have installed the following below packages
 * Git 1.7.0
 * Emacs 24.5 with =org-mode= version 8.3.4 
 * Skype 4.3
 * Thunderbird Mail
 * Google-Chrome
 * Hex Chat
 * Sublime Text Editor
 * VirtualBox
 * Setting up proxy globally on following file
#+begin_example
$ vi ~/.bashrc
#+end_example
 * And I Entered the follwing proxy settings
  + export http_proxy="http://proxy.iiit.ac.in:8080"
  + export https_proxy="http://proxy.iiit.ac.in:8080"

* Week 9
* 2016-Apr-18-Monday:
** From 9:30 AM TO 11:00 AM :
- I have attended meeting with Vlead staff and with Prof.Venkatesh regarding status of projects.
** From 11:00 AM TO 05:00 PM :
- Sanchita assigned to me a task, the task is to create individual excel sheet document for all the applied interns. Here is the more explanation about the task
  + Fetching all the interns details from google drive (from jobs@vlabs.ac.in)and putting into appropriate excell sheet with filename as internname.odt 
  + And i have shared all 14 interns excell sheet with team.

* 2016-Apr-19-Tuesday:
** From 9:30 AM TO 05:00 AM :
- I attended meeting with Vlead staff and with Prof.Venkatesh regarding status of projects. 
- *Priya Ma'm* assigned a task to me, the task is to convert all =docx= files of =outreach-portal's= project to =org-mode= files using emacs.
- And I shared all the converted =org= files with Priya, Lalit, Ravi Shankar and Sripathi.

* 2016-Apr-20-Wednesday:
** From 9:30 AM TO 06:00 PM:
 -  Today I learned about Dictionaries in Python. After I finished reading complete chapter. 
 -  I have implemented source code for all the exercises related to dictionaries.
 -  Here I have listed all the exercises that I have done so far.
* Exercise-1.
 -  What are Dictionaries in Python?, Creating dictionary, Keys and Values, Looping, Sorting, built-in functions and Methods.
** Script-1:
-  I have implemented python script which explains about how to create dictionaries, updating and deleting dictionaries.
-  And Executed the python script using below command
#+BEGIN_EXAMPLE
chmod +x filename.py
./install.py
#+END_EXAMPLE
#+BEGIN_EXAMPLE
#!/usr/bin/python
# Creating a dictionary and access dictionary elements it  using variable to which it is assigned.
week = {"sun": "sunday", "mon": "monday", "tus": "tuesday", "wed": "wednesday", "thur": "thursday", "fri": "friday", "sat": "monday"}
print "week['sun']: ", week['sun']
print "week['mon']: ", week['mon']
print "week['tus']: ", week['tus']
print "week['wed']: ", week['wed']
print "week['thur']: ", week['thur']
print "week['fir']: ", week['fri']
print "week['sat']: ", week['sat']

# Modifying dictionary values are accessed using keys.
week["sat"] = "saterday"
print "week['sat']: ", week['sat']

# Here is an remove an element from dictionary
del week["sat"]
print week

# Print keys and values in given dictionary
print week.keys()
print week.values()
print week.items()

# Week dictionary to print the keys, values and both keys and values of the dictionary using for loop. 
for key in week:
    print key
    
for k in week:
    print week[k]
    
for k, v in week.items():
    print ": ".join((k, v))

# Print sorting order week dictionary
week1 = {"sun": 1, "mon": 3, "tus": 4, "wed": 2, "thur": 5, "fri": 7, "sat": 6}
keysweek = week1.keys()
keysweek.sort()

for k in keysweek:
    print ": ".join((k, str(week1[k])))
#+END_EXAMPLE

* Week 10
* 2016-Apr-25-Monday:
** From 10:00 AM TO 06:00 PM:
- Today *Madhavi* has assigned to me a task, the task is about *Restructuring of Vlabs landing page* Project. Here I have given task to convert all the required documents to org-mode format as per Madhavi's requirement.
- I have helped *Aswin* in installing =virtual box= and =KVM virtualization= on his desktop machine. And also I helped him in how to install windows xp on virtualbox.

* 2016-Apr-26-Tuesday:
** From 10:00 AM TO 06:00 PM:
- Today *Lalit* has assigned to me a task, the task is to convert all =docx= files to =org-mode= using emacs.
- I converted all suggested files to =org-mode=  And then I pushed to my forked repository on github. Then I made a pull request to actual =outreach-portal= repository unders =vlead= organization (This is because I don't have access to =vlead= organization).

* 2016-Apr-27-Wednesday:
** From 10:00 AM TO 01:00 PM:
- Today *Ashay* has assigned to me a task, the task is to install Ubuntu 12.04 on local machine for setting up edX in standalone machine.
- I have installed Ubuntu 12.04 64bit OS through bootable pendrive.

** From 02:00 PM TO 05:30 PM:
- I have installed ubuntu 14.04 64 bit OS on *RAVI's* machine as previously installed OS is crashed I tried to install two more times but after I had discussion with system team I came to that there is an issues the system =hardware= itself.

* 2016-Apr-28-Thursday:
** From 10:00 AM TO 05:00 PM:
- Today I discussed with team for getting a task, then they are assigned me a task, which is to install ubuntu 14.04 64bit OS on Prof. Choppella's new Dell machine.
- I have installed Ubuntu 14.04 64bit LTS OS through bootable pendrive.
- After successfull installation of ubuntu OS. I restarted machine and it worked well.
- After reboot machine, I have installed all the necessary packages. Below I have listed all the installed packages.
1. Ubuntu 14.04 64 bit (Beside Windows OS)
2. Emacs24.5 with org mode 8 version.
3. Setting up proxy in =.bashrc= file
4. Setting up proxy in =/etc/apt/apt.conf= file for apt to work via proxy
5. Google chrome
6. Skype 4.3
7. Git 1.7.2
8. Hex Chat

*Note:-*
- But some times machine is not booting properly , due to hardware inconsistancey.

* 2016-Apr-29-Friday:
** From 09:00 AM TO 05:30 PM:
 - I have gone through Literate Programming and installed latest
   version of emacs24.5 with org-mode8.3.4 on my machine. And also I followed below procedure for literate programming.
* Literate porgramming:
A Literate program generally consists of explanation of the code in a
natural language such as English, interspersed with snippets of code
to be executed. This means that Literate programs are very easy to
understand and share, as all the code is well explained.
* Procedure:
*Step 1:* Open emacs through terminal using command
 #+begin_src shell
 emacs <filename>
 #+end_src
*step 2:* make sure that file is in  =org-mode= if not change using
 #+begin_src shell
 M-x org-mode
 #+end_src 
*step 3:* Include profile using
#+begin_src shell
M-x org-insert-export-options-template
#+end_src
*step 4:* Include following properties and edit property of tangle =<filename>= w.r.t language (e.g hello.py, hello.java and hello.c)
#+begin_src shell 
#+PROPERTY: session *scratch*
#+PROPERTY: results output
#+PROPERTY: tangle <filename>
#+PROPERTY: exports code
#+end_src 
*step 5:* Start writing documentation followed by code make sure that code embeded in =#+begin_src python= and =#+end_src=
*step 6:* Now extract the source code from documentation using following cammand, It will prompt for file name give =<filename>.org= file as input
#+begin_src shell
M-x org-babel-tangle-file
#+end_src 
*step 7:* Now check tangle file in current directory if not exported kill the =<filename>.org= using =C-x k= and reload it.
